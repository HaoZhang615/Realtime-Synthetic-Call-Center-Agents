name: Build and Deploy Frontend

on:
  push:
    branches: [ main, reactandfastapi ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
      ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }} # e.g. myregistry.azurecr.io
      ACR_NAME: ${{ secrets.ACR_NAME }}
      CONTAINER_APP_NAME: ${{ secrets.CONTAINER_APP_NAME }}
      RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        working-directory: src/frontend/react-app
        run: npm install

      - name: Build production bundle
        working-directory: src/frontend/react-app
        run: npm run build

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Build and push image to ACR
        uses: docker/build-push-action@v5
        with:
          context: ./src/frontend/react-app
          push: true
          tags: ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Ensure ACR authentication
        run: az acr login --name ${{ env.ACR_NAME }}

      - name: Set container app registry (ensure it can pull images)
        run: |
          az containerapp registry set \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --identity system \
            --server ${{ env.ACR_LOGIN_SERVER }}

      - name: Update Container App with new image
        run: |
          az containerapp update \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
